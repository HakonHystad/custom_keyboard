/*12-05-17*****************************************************************************************************
***************************************************************************************************************
**                                                                                                           **
**                                                KeyMatrix.h                                                 **
**                                                                                                           **
***************************************************************************************************************
**************************************************************************************************************/

/* Keep track of the keyboard layout and keys */

#ifndef _KEYMATRIX_H_
#define _KEYMATRIX_H_

/*#############################################################################################################

Section:                                          ~libs

#############################################################################################################*/

#include "KeyMap.h"


/*#############################################################################################################

Section:                                          ~declarations

#############################################################################################################*/

/* interfacing object */
class KeyMatrix
{

public:
    Keyboard();

    void scan();
    bool isPressed( const Key &key );

    void getKeycodes( uint16_t a[] );
    
protected:

private:
    
    uint8_t keyState[2][ROW_NR] = {{0}};
    KeyMap map;
    volatile Key pressedKeys[6];
    uint8_t keyCount = 0;

    uint16_t modifier = 0;
    bool fn = false;
    
    void resetKeys();
    void setKeys();
    void setKey( const uint8_t r, const uint8_t c );
    

    
};

#endif// header guard
